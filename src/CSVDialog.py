# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.4 on Mon May 12 17:00:31 2014

import wx
import csv
import sys
        
# begin wxGlade: dependencies
import wx.grid
# end wxGlade

# begin wxGlade: extracode

# end wxGlade


class CSVDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: CSVDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_5 = wx.StaticText(self, -1, "CSV dialect settings")
        self.label_8_copy = wx.StaticText(self, -1, "Delimiter")
        self.cbDelim = wx.ComboBox(self, -1, choices=["<tab>", "<whitespace>", "<semicolon>", "<doublecolon>", "<comma>"], style=wx.CB_DROPDOWN)
        self.label_7 = wx.StaticText(self, -1, "Comment character")
        self.tcComment = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.cbSkipInitSpace = wx.CheckBox(self, -1, "Skip initial space")
        self.static_line_2 = wx.StaticLine(self, -1)
        self.label_9_copy = wx.StaticText(self, -1, "Preview")
        self.label_1 = wx.StaticText(self, -1, "Number of rows to show")
        self.spNbRows = wx.SpinCtrl(self, -1, "5", min=0, max=100)
        self.grid_1 = wx.grid.Grid(self, -1, size=(1, 1))
        self.static_line_3 = wx.StaticLine(self, -1)
        self.label_10 = wx.StaticText(self, -1, "Select columns")
        self.label_2 = wx.StaticText(self, -1, "X")
        self.cbX = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN | wx.CB_READONLY)
        self.label_3 = wx.StaticText(self, -1, "Y")
        self.cbY = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN | wx.CB_READONLY)
        self.label_4 = wx.StaticText(self, -1, "Z")
        self.cbZ = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN | wx.CB_READONLY)
        self.static_line_1 = wx.StaticLine(self, -1)
        self.button_1 = wx.Button(self, wx.ID_CANCEL, "Cancel")
        self.button_2 = wx.Button(self, wx.ID_OK, "OK")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_COMBOBOX, self.onDelimChange, self.cbDelim)
        self.Bind(wx.EVT_TEXT_ENTER, self.onEnterCommenChar, self.tcComment)
        self.Bind(wx.EVT_CHECKBOX, self.onCheckSkipInitSpace, self.cbSkipInitSpace)
        self.Bind(wx.EVT_SPINCTRL, self.onSpin, self.spNbRows)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: CSVDialog.__set_properties
        self.SetTitle("CSV settings dialog")
        self.label_5.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.cbDelim.SetMinSize((70, 30))
        self.cbDelim.SetSelection(0)
        self.tcComment.SetMaxLength(1)
        self.label_9_copy.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.grid_1.CreateGrid(5, 3)
        self.grid_1.EnableEditing(0)
        self.grid_1.SetMinSize((340, 190))
        self.label_10.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.label_2.SetMinSize((20, 19))
        self.cbX.SetMinSize((50, 30))
        self.label_3.SetMinSize((20, 19))
        self.cbY.SetMinSize((50, 30))
        self.label_4.SetMinSize((20, 19))
        self.cbZ.SetMinSize((50, 30))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: CSVDialog.__do_layout
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_10 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_11_copy = wx.BoxSizer(wx.VERTICAL)
        sizer_12_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_14 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_13_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_15 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_11_copy.Add(self.label_5, 0, wx.BOTTOM | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 10)
        sizer_15.Add(self.label_8_copy, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_15.Add(self.cbDelim, 0, 0, 0)
        sizer_12_copy.Add(sizer_15, 0, wx.LEFT | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_13_copy.Add(self.label_7, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_13_copy.Add(self.tcComment, 0, 0, 0)
        sizer_12_copy.Add(sizer_13_copy, 0, wx.LEFT | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_14.Add(self.cbSkipInitSpace, 0, 0, 0)
        sizer_12_copy.Add(sizer_14, 0, wx.LEFT | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_11_copy.Add(sizer_12_copy, 0, 0, 0)
        sizer_4.Add(sizer_11_copy, 1, wx.EXPAND, 0)
        sizer_4.Add(self.static_line_2, 0, wx.ALL | wx.EXPAND, 5)
        sizer_4.Add(self.label_9_copy, 0, wx.BOTTOM | wx.ALIGN_CENTER_HORIZONTAL, 10)
        sizer_5.Add(self.label_1, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_5.Add(self.spNbRows, 0, wx.ALIGN_RIGHT, 0)
        sizer_4.Add(sizer_5, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_4.Add(self.grid_1, 0, wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_4.Add(self.static_line_3, 0, wx.EXPAND, 0)
        sizer_4.Add(self.label_10, 0, wx.BOTTOM | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 10)
        sizer_7.Add(self.label_2, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_7.Add(self.cbX, 0, 0, 0)
        sizer_6.Add(sizer_7, 1, wx.EXPAND, 0)
        sizer_8.Add(self.label_3, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_8.Add(self.cbY, 0, 0, 0)
        sizer_6.Add(sizer_8, 1, wx.EXPAND, 0)
        sizer_9.Add(self.label_4, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_9.Add(self.cbZ, 0, 0, 0)
        sizer_6.Add(sizer_9, 1, wx.EXPAND, 0)
        sizer_4.Add(sizer_6, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_4.Add(self.static_line_1, 0, wx.ALL | wx.EXPAND, 5)
        sizer_10.Add(self.button_1, 0, 0, 0)
        sizer_10.Add(self.button_2, 0, 0, 0)
        sizer_4.Add(sizer_10, 0, wx.ALIGN_RIGHT, 0)
        self.SetSizer(sizer_4)
        sizer_4.Fit(self)
        self.Layout()
        # end wxGlade

    def onSpin(self, event):  # wxGlade: MyDialog.<event_handler>
        self.nbRows = int(self.spNbRows.GetValue())
        self.ResizeGrid()
        self.UpdateGrid()
        self.UpdateControls()
    
    def process(self, path):
        self.path = path
        
        self.dialect = csv.excel_tab
        self.commentchar = None
        self.nbRows = self.grid_1.GetNumberRows()
        self.nbCols = self.grid_1.GetNumberCols()
        
        self.UpdateGrid()
        self.UpdateControls()
        
    def UpdateGrid(self):
        with open(self.path, 'rb') as csvfile:
            reader = csv.reader(csvfile, dialect = self.dialect)
            try:
                for irow in range(self.nbRows):
                    row = reader.next()
                    if len(row) > self.nbCols:
                        self.nbCols = len(row)
                        self.ResizeGrid()
                        
                    icol = 0
                    for val in row:
                        self.grid_1.SetCellValue(irow, icol, val)
                        icol = icol + 1
                        
                    if self.commentchar and row[0].startswith(self.commentchar):
                        for icol in range(self.nbCols):
                            self.grid_1.SetCellBackgroundColour(irow, icol, wx.GREEN)
            except csv.Error as e:
                sys.exit('file %s, line %d: %s' % (filename, reader.line_num, e))
                
    def UpdateControls(self):
        fieldNames = []
        for icol in range(self.grid_1.GetNumberCols()):
            fieldNames.append(self.grid_1.GetColLabelValue(icol))
        
        self.cbX.SetItems(fieldNames)
        self.cbY.SetItems(fieldNames)
        self.cbZ.SetItems(fieldNames)
        
    def ResizeGrid(self):
        #change number of rows
        curNbRows = self.grid_1.GetNumberRows()
        diff = curNbRows - self.nbRows
        if diff > 0:
            self.grid_1.DeleteRows(numRows = diff)
        elif diff < 0:
            self.grid_1.AppendRows(numRows = -diff)
        #change number of columns
        curNbCols = self.grid_1.GetNumberCols()
        diff = curNbCols - self.nbCols
        if diff > 0:
            self.grid_1.DeleteCols(numCols = diff)
        elif diff < 0:
            self.grid_1.AppendCols(numCols = -diff)
    
    def GetDataCols(self):
        return [self.cbX.GetSelection(),
                self.cbY.GetSelection(),
                self.cbZ.GetSelection()]
    
    def GetDialect(self):
        return self.dialect
    
    def GetCommentChar(self):
        return self.commentchar
        
    def onDelimChange(self, event):  # wxGlade: MyDialog.<event_handler>
        delim_dict = {
                     "<tab>": '\t',
                     "<doublecolon>": ':',
                     "<semicolon>": ';',
                     "<comma>": ',',
                     "<whitespace>": ' '
                     }
        self.dialect.delimiter = delim_dict[event.GetString()]
        self.UpdateGrid()

    def onEnterCommenChar(self, event):  # wxGlade: MyDialog.<event_handler>
        self.commentchar = event.GetString()
        self.UpdateGrid()

    def onCheckSkipInitSpace(self, event):  # wxGlade: MyDialog.<event_handler>
        self.dialect.skipinitialspace = event.IsChecked()
        self.UpdateGrid()

# end of class CSVDialog
